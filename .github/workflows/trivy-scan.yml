name: Trivy Vulnerability Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  trivy-scan:
    name: Scan the Docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Trivy vulnerability scanner and save the report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ezio22/cicddemoapp:latest'
          format: 'table'
          output: 'trivy-report.txt'
          exit-code: '1'
          ignore-unfixed: true

      - name: Upload Trivy scan report as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: trivy-report
          path: trivy-report.txt

      - name: Create GitHub issue for Trivy findings
        if: failure()
        uses: actions/github-script@v5
        with:
          script: |
            const fs = require('fs');
            const maxBodyLength = 65000; // Set a limit slightly below the GitHub maximum
            let report = fs.readFileSync('trivy-report.txt', {encoding: 'utf8'});
            // Truncate the report if it's too long
            if (report.length > maxBodyLength) {
              report = report.substring(0, maxBodyLength) + '\n\n... (report truncated due to length)';
            }
            const title = 'Trivy Vulnerability Report';
            const body = `Trivy has detected vulnerabilities:\n\`\`\`\n${report}\n\`\`\``;
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
            });
          github-token: ${{ secrets.REPO_TOKEN }}



