name: Build, Push, and Scan Docker image

on:
  push:
    branches:
      - main

# Define the concurrency group
concurrency: 
  group: ghcr-build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the code
      uses: actions/checkout@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}

    - name: Set lowercase repository owner
      run: echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | awk '{print tolower($0)}')" >> $GITHUB_ENV

    - name: Build Docker image with specific tag
      run: |
        echo "Image name: ghcr.io/${{ env.REPO_OWNER }}/ghcr-democicdapp:v.1.2.1" # adding the image we built and pushed to GHCR
        docker build . -t ghcr.io/${{ env.REPO_OWNER }}/ghcr-democicdapp:v.1.2.1

    - name: Push Docker image to GitHub Container Registry with tag v.1.2.1
      run: docker push ghcr.io/${{ env.REPO_OWNER }}/ghcr-democicdapp:v.1.2.1

    - name: Trivy Vulnerability Scan
      run: |
        set +e  # Prevent script from stopping on non-zero exit code
        trivy image --severity HIGH,CRITICAL --format table --exit-code 1 --output trivy-results.txt ghcr.io/${{ env.REPO_OWNER }}/ghcr-democicdapp:v.1.2.1
        scan_exit_code=$?
        set -e  # Re-enable script stopping on non-zero exit code
        if [ $scan_exit_code -ne 0 ]; then
          echo "Trivy found vulnerabilities."
          # Handle the vulnerability findings as needed
        fi
      continue-on-error: true  # This allows the job to continue even if this step fails

    - name: Upload Trivy scan results
      if: always()  # Ensures that this step always runs, regardless of the previous step's outcome
      uses: actions/upload-artifact@v2
      with:
        name: trivy-results
        path: trivy-results.txt
